{"version":3,"sources":["logger.ts"],"names":["Logger","Logger.constructor","Logger.onFullSync","Logger.onGraphChange"],"mappings":"AAEA,IAAY,EAAE,WAAM,kBACpB,CAAC,CADqC;AACtC,0BAEO,aAAa,CAAC,CAAA;AAIrB;IAKIA,gBACeA,OAAgBA,EAChBA,UAAUA;QAP7BC,iBA+BCA;QAzBkBA,YAAOA,GAAPA,OAAOA,CAASA;QAChBA,eAAUA,GAAVA,UAAUA,CAAAA;QACrBA,IAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA,UAAUA,EAAEA;YACrBA,KAAKA,EAAEA,QAAMA,OAAOA,CAACA,EAAIA;SAC5BA,CAACA,CAACA;QAEHA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,mBAAaA,CAACA,OAAOA,CAACA,CAAAA;QACtCA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,QAAQA,EAAEA,cAAMA,OAAAA,KAAIA,CAACA,aAAaA,EAAEA,EAApBA,CAAoBA,CAACA,CAAAA;QAE1DA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,6BAAiBA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAAAA;QAC5CA,IAAIA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,CAAAA;QAExBA,IAAIA,CAACA,EAAEA,CAACA,EAAEA,CAACA,WAAWA,EAAEA,cAAMA,OAAAA,KAAIA,CAACA,UAAUA,EAAEA,EAAjBA,CAAiBA,CAACA,CAAAA;QAChDA,IAAIA,CAACA,EAAEA,CAACA,EAAEA,CAACA,WAAWA,EAAEA;YACpBA,OAAOA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAAAA;QAC5BA,CAACA,CAACA,CAAAA;IACNA,CAACA;IAEDD,2BAAUA,GAAVA;QACIE,IAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAAAA;IACtDA,CAACA;IAEDF,8BAAaA,GAAbA;QACIG,IAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,CAACA,CAAAA;IACvDA,CAACA;IACLH,aAACA;AAADA,CA/BA,AA+BCA,IAAA;AA/BD;wBA+BC,CAAA","file":"logger.js","sourcesContent":["// import { IState } from 'asyncmachine';\nimport Network from \"./network\";\nimport * as io from 'socket.io-client'\nimport D3NetworkJson, {\n    D3JsonDiffFactory\n} from \"./d3network\";\n\ntype MachineId = string;\n\nexport default class Logger {\n    io: SocketIOClient.Socket;\n    json: D3NetworkJson;\n    diff: D3JsonDiffFactory;\n\n    constructor(\n            public network: Network,\n            public serverHost) {\n        this.io = io(serverHost, {\n            query: `id=${network.id}`\n        });\n\n        this.json = new D3NetworkJson(network)\n        this.json.network.on('change', () => this.onGraphChange())\n\n        this.diff = new D3JsonDiffFactory(this.json)\n        this.diff.generateJson()\n        \n        this.io.on('full-sync', () => this.onFullSync())\n        this.io.on('connected', () => {\n            console.log('connected')\n        })\n    }\n\n    onFullSync() {\n        this.io.emit('full-sync', this.diff.previous_json)\n    }\n\n    onGraphChange() {\n        this.io.emit('diff-sync', this.diff.generateDiff())\n    }\n}"],"sourceRoot":"/source/"}