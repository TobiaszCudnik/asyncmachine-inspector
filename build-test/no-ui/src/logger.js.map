{"version":3,"sources":["src/logger.ts","src/logger.js"],"names":["Logger","Logger.constructor","Logger.onFullSync","Logger.onGraphChange"],"mappings":";;AAEA,IAAY,EAAE,GAAA,OAAA,CAAM,kBACpB,CAAC,CADqC;AACtC,IAAA,WAAA,GAAA,OAAA,CAEO,aAAa,CAAC,CAAA;AAIrB,IAAA,MAAA,GAAA,CAAA,YAAA;AAKIA,aAAAA,MAAAA,CACeA,OAAgBA,EAChBA,UAAUA,EAAAA;AAP7BC,YAAAA,KAAAA,GAAAA,IAAAA,CA+BCA;AAzBkBA,YAAAA,CAAAA,OAAOA,GAAPA,OAAOA,CAASA;AAChBA,YAAAA,CAAAA,UAAUA,GAAVA,UAAUA,CAAAA;AACrBA,YAAIA,CAACA,EAAEA,GAAGA,EAAEA,CAACA,UAAUA,EAAEA;AACrBA,iBAAKA,EAAEA,KAAAA,GAAMA,OAAOA,CAACA,EAAIA;SAC5BA,CAACA,CAACA;AAEHA,YAAIA,CAACA,IAAIA,GAAGA,IAAIA,WAAAA,CAAAA,OAAaA,CAACA,OAAOA,CAACA,CAAAA;AACtCA,YAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,EAAEA,CAACA,QAAQA,EAAEA,YAAAA;AAAMA,mBAAAA,KAAIA,CAACA,aAAaA,EAAEA,CAAAA;SAAAA,CAACA,CAAAA;AAE1DA,YAAIA,CAACA,IAAIA,GAAGA,IAAIA,WAAAA,CAAAA,iBAAiBA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAAAA;AAC5CA,YAAIA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,CAAAA;AAExBA,YAAIA,CAACA,EAAEA,CAACA,EAAEA,CAACA,WAAWA,EAAEA,YAAAA;AAAMA,mBAAAA,KAAIA,CAACA,UAAUA,EAAEA,CAAAA;SAAAA,CAACA,CAAAA;AAChDA,YAAIA,CAACA,EAAEA,CAACA,EAAEA,CAACA,WAAWA,EAAEA,YAAAA;AACpBA,mBAAOA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAAAA;SAC3BA,CAACA,CAAAA;KACLA;AAEDD,UAAAA,CAAAA,SAAAA,CAAAA,UAAUA,GAAVA,YAAAA;AACIE,YAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAAAA;KACrDA,CAAAA;AAEDF,UAAAA,CAAAA,SAAAA,CAAAA,aAAaA,GAAbA,YAAAA;AACIG,YAAIA,CAACA,EAAEA,CAACA,IAAIA,CAACA,WAAWA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,YAAYA,EAAEA,CAACA,CAAAA;KACtDA,CAAAA;AACLH,WAAAA,MAACA,CAAAA;CA/BD,CAAA,EAAA,CA+BC;AA/BD,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,CAAA;ACmBA,OAAO,CAAC,OAAO,GAAG,MDYjB,CAAA","file":"src/logger.js","sourcesContent":["// import { IState } from 'asyncmachine';\nimport Network from \"./network\";\nimport * as io from 'socket.io-client'\nimport D3NetworkJson, {\n    D3JsonDiffFactory\n} from \"./d3network\";\n\ntype MachineId = string;\n\nexport default class Logger {\n    io: SocketIOClient.Socket;\n    json: D3NetworkJson;\n    diff: D3JsonDiffFactory;\n\n    constructor(\n            public network: Network,\n            public serverHost) {\n        this.io = io(serverHost, {\n            query: `id=${network.id}`\n        });\n\n        this.json = new D3NetworkJson(network)\n        this.json.network.on('change', () => this.onGraphChange())\n\n        this.diff = new D3JsonDiffFactory(this.json)\n        this.diff.generateJson()\n        \n        this.io.on('full-sync', () => this.onFullSync())\n        this.io.on('connected', () => {\n            console.log('connected')\n        })\n    }\n\n    onFullSync() {\n        this.io.emit('full-sync', this.diff.previous_json)\n    }\n\n    onGraphChange() {\n        this.io.emit('diff-sync', this.diff.generateDiff())\n    }\n}","var io = require('socket.io-client');\nvar d3network_1 = require(\"./d3network\");\nvar Logger = (function () {\n    function Logger(network, serverHost) {\n        var _this = this;\n        this.network = network;\n        this.serverHost = serverHost;\n        this.io = io(serverHost, {\n            query: \"id=\" + network.id\n        });\n        this.json = new d3network_1.default(network);\n        this.json.network.on('change', function () { return _this.onGraphChange(); });\n        this.diff = new d3network_1.D3JsonDiffFactory(this.json);\n        this.diff.generateJson();\n        this.io.on('full-sync', function () { return _this.onFullSync(); });\n        this.io.on('connected', function () {\n            console.log('connected');\n        });\n    }\n    Logger.prototype.onFullSync = function () {\n        this.io.emit('full-sync', this.diff.previous_json);\n    };\n    Logger.prototype.onGraphChange = function () {\n        this.io.emit('diff-sync', this.diff.generateDiff());\n    };\n    return Logger;\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Logger;"],"sourceRoot":"/source/"}