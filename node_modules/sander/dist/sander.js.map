{"version":3,"file":"sander.js","sources":["../src/sander.js","../src/extraMethods/symlinkOrCopy.js","../src/extraMethods/rimraf.js","../src/extraMethods/lsr.js","../src/extraMethods/copyFile.js","../src/extraMethods/copydir.js","../src/specialMethods/writeFile-appendFile.js","../src/specialMethods/symlink.js","../src/specialMethods/open.js","../src/specialMethods/mkdir.js","../src/specialMethods/link-rename.js","../src/specialMethods/exists.js","../src/specialMethods/createReadStream-createWriteStream.js","../src/utils/resolvePathAndOptions.js","../src/methodMakers/fileDescriptorMethod.js","../src/methodMakers/standardMethod.js","../src/utils/resolvePath.js"],"sourcesContent":["import * as fs from 'graceful-fs';\nimport * as es6Promise from 'es6-promise';\nimport { syncMethod, asyncMethod } from './methodMakers/standardMethod';\nimport { asyncFileDescriptorMethod } from './methodMakers/fileDescriptorMethod';\n\n// standard async methods\nexport const chmod = asyncMethod( 'chmod' );\nexport const chown = asyncMethod( 'chown' );\nexport const createReadStream = asyncMethod( 'createReadStream' );\nexport const createWriteStream = asyncMethod( 'createWriteStream' );\nexport const lchmod = asyncMethod( 'lchmod' );\nexport const lchown = asyncMethod( 'lchown' );\nexport const lstat = asyncMethod( 'lstat' );\nexport const readdir = asyncMethod( 'readdir' );\nexport const readFile = asyncMethod( 'readFile' );\nexport const readlink = asyncMethod( 'readlink' );\nexport const realpath = asyncMethod( 'realpath' );\nexport const rmdir = asyncMethod( 'rmdir' );\nexport const stat = asyncMethod( 'stat' );\nexport const truncate = asyncMethod( 'truncate' );\nexport const unlink = asyncMethod( 'unlink' );\nexport const utimes = asyncMethod( 'utimes' );\nexport const unwatchFile = asyncMethod( 'unwatchFile' );\nexport const watch = asyncMethod( 'watch' );\nexport const watchFile = asyncMethod( 'watchFile' );\n\n// standard sync methods\nexport const chmodSync = syncMethod( 'chmodSync' );\nexport const chownSync = syncMethod( 'chownSync' );\nexport const lchmodSync = syncMethod( 'lchmodSync' );\nexport const lchownSync = syncMethod( 'lchownSync' );\nexport const lstatSync = syncMethod( 'lstatSync' );\nexport const readdirSync = syncMethod( 'readdirSync' );\nexport const readFileSync = syncMethod( 'readFileSync' );\nexport const readlinkSync = syncMethod( 'readlinkSync' );\nexport const realpathSync = syncMethod( 'realpathSync' );\nexport const rmdirSync = syncMethod( 'rmdirSync' );\nexport const statSync = syncMethod( 'statSync' );\nexport const truncateSync = syncMethod( 'truncateSync' );\nexport const unlinkSync = syncMethod( 'unlinkSync' );\nexport const utimesSync = syncMethod( 'utimesSync' );\n\n// file descriptor async methods\nexport const close = asyncFileDescriptorMethod( 'close' );\nexport const fchmod = asyncFileDescriptorMethod( 'fchmod' );\nexport const fchown = asyncFileDescriptorMethod( 'fchown' );\nexport const fstat = asyncFileDescriptorMethod( 'fstat' );\nexport const fsync = asyncFileDescriptorMethod( 'fsync' );\nexport const ftruncate = asyncFileDescriptorMethod( 'ftruncate' );\nexport const futimes = asyncFileDescriptorMethod( 'futimes' );\nexport const read = asyncFileDescriptorMethod( 'read' );\n\n// file descriptor sync methods\nexport const closeSync = fs.closeSync;\nexport const fchmodSync = fs.fchmodSync;\nexport const fchownSync = fs.fchownSync;\nexport const fstatSync = fs.fstatSync;\nexport const fsyncSync = fs.fsyncSync;\nexport const ftruncateSync = fs.ftruncateSync;\nexport const futimesSync = fs.futimesSync;\nexport const readSync = fs.readSync;\n\n// special methods\nexport { createReadStream, createWriteStream } from './specialMethods/createReadStream-createWriteStream'; // TODO aren't these covered by the standard methods?\nexport { exists, existsSync } from './specialMethods/exists';\nexport { link, linkSync, rename, renameSync } from './specialMethods/link-rename';\nexport { mkdir, mkdirSync } from './specialMethods/mkdir';\nexport { open, openSync } from './specialMethods/open';\nexport { symlink, symlinkSync } from './specialMethods/symlink';\nexport { writeFile, writeFileSync, appendFile, appendFileSync } from './specialMethods/writeFile-appendFile';\n\n// extra methods\nexport { copydir, copydirSync } from './extraMethods/copydir';\nexport { copyFile, copyFileSync } from './extraMethods/copyFile';\nexport { lsr, lsrSync } from './extraMethods/lsr';\nexport { rimraf, rimrafSync } from './extraMethods/rimraf';\nexport { symlinkOrCopy, symlinkOrCopySync } from './extraMethods/symlinkOrCopy';\n\n// expose Promise for convenience\n// https://github.com/esperantojs/esperanto/issues/161\nexport const Promise = es6Promise.Promise;","import { stat, statSync } from '../sander';\nimport { copydir, copydirSync } from './copydir';\nimport { copyFile, copyFileSync } from './copyFile';\nimport { symlink, symlinkSync } from '../specialMethods/symlink';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nconst isWindows = process.platform === 'win32';\n\nexport function symlinkOrCopy () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\t\tlet copyDirOrFileTo = stat( src )\n\t\t\t.then( stats => {\n\t\t\t\treturn ( stats.isDirectory() ? copydir : copyFile )\n\t\t\t\t\t.apply( null, arguments )\n\t\t\t\t\t.to;\n\t\t\t});\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\treturn copyDirOrFileTo\n\t\t\t\t\t.then(fn => {\n\t\t\t\t\t\treturn fn.apply(null, arguments);\n\t\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\treturn symlink.apply( null, arguments );\n}\n\nexport function symlinkOrCopySync () {\n\tif ( isWindows ) {\n\t\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\t\treturn ( statSync( src ).isDirectory() ? copydirSync : copyFileSync ).apply( null, arguments );\n\t}\n\n\treturn symlinkSync.apply( null, arguments );\n}","import _rimraf from 'rimraf';\nimport resolvePath from '../utils/resolvePath';\n\nexport function rimraf () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\t_rimraf( target, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function rimrafSync () {\n\t_rimraf.sync( resolvePath( arguments ) );\n}","import * as fs from 'graceful-fs';\nimport { sep } from 'path';\nimport resolvePath from '../utils/resolvePath';\n\nexport function lsr () {\n\tconst basedir = resolvePath( arguments );\n\n\tlet result = [];\n\n\tfunction processdir ( dir, cb ) {\n\t\tfs.readdir( dir, ( err, files ) => {\n\t\t\tif ( err ) {\n\t\t\t\treturn cb( err );\n\t\t\t}\n\n\t\t\tlet remaining = files.length;\n\n\t\t\tif ( !remaining ) {\n\t\t\t\treturn cb();\n\t\t\t}\n\n\t\t\tfiles = files.map( file => dir + sep + file );\n\n\t\t\tfunction check ( err ) {\n\t\t\t\tif ( err ) {\n\t\t\t\t\tcb( err );\n\t\t\t\t}\n\n\t\t\t\telse if ( !--remaining ) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfiles.forEach( file => {\n\t\t\t\tfs.stat( file, ( err, stats ) => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\tcb( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( stats.isDirectory() ) {\n\t\t\t\t\t\t\tprocessdir( file, check );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.push( file.replace( basedir + sep, '' ) );\n\t\t\t\t\t\t\tcheck();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tprocessdir( basedir, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil( result );\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function lsrSync () {\n\tconst basedir = resolvePath( arguments );\n\n\tlet result = [];\n\n\tfunction processdir ( dir ) {\n\t\tfs.readdirSync( dir ).forEach( file => {\n\t\t\tconst filepath = dir + sep + file;\n\n\t\t\tif ( fs.statSync( filepath ).isDirectory() ) {\n\t\t\t\tprocessdir( filepath );\n\t\t\t} else {\n\t\t\t\tresult.push( filepath.replace( basedir + sep, '' ) );\n\t\t\t}\n\t\t});\n\t}\n\n\tprocessdir( basedir );\n\treturn result;\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copyFile () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst readStream = fs.createReadStream( src, readOptions );\n\t\t\t\t\t\tconst writeStream = fs.createWriteStream( dest, writeOptions );\n\n\t\t\t\t\t\treadStream.on( 'error', reject );\n\t\t\t\t\t\twriteStream.on( 'error', reject );\n\n\t\t\t\t\t\twriteStream.on( 'close', fulfil );\n\n\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copyFileSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tconst data = fs.readFileSync( src, readOptions );\n\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\tfs.writeFileSync( dest, data, writeOptions );\n\t\t}\n\t};\n}","import { sep } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function copydir () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest, cb ) {\n\t\t\t\tmkdirp( dest, err => {\n\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\tfs.readdir( src, ( err, files ) => {\n\t\t\t\t\t\tif ( err ) return cb( err );\n\n\t\t\t\t\t\tlet remaining = files.length;\n\n\t\t\t\t\t\tif ( !remaining ) return cb();\n\n\t\t\t\t\t\tfunction check ( err ) {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treturn cb( err );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( !--remaining ) {\n\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.forEach( function ( filename ) {\n\t\t\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\t\t\tfs.stat( srcpath, ( err, stats ) => {\n\t\t\t\t\t\t\t\tvar readStream, writeStream;\n\n\t\t\t\t\t\t\t\tif ( stats.isDirectory() ) {\n\t\t\t\t\t\t\t\t\treturn copydir( srcpath, destpath, check );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treadStream = fs.createReadStream( srcpath, readOptions );\n\t\t\t\t\t\t\t\twriteStream = fs.createWriteStream( destpath, writeOptions );\n\n\t\t\t\t\t\t\t\treadStream.on( 'error', cb );\n\t\t\t\t\t\t\t\twriteStream.on( 'error', cb );\n\n\t\t\t\t\t\t\t\twriteStream.on( 'close', check );\n\n\t\t\t\t\t\t\t\treadStream.pipe( writeStream );\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tcopydir( src, dest, err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfulfil();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function copydirSync () {\n\tconst { resolvedPath: src, options: readOptions } = resolvePathAndOptions( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { resolvedPath: dest, options: writeOptions } = resolvePathAndOptions( arguments );\n\n\t\t\tfunction copydir ( src, dest ) {\n\t\t\t\tmkdirp.sync( dest );\n\n\t\t\t\tfs.readdirSync( src ).forEach( filename => {\n\t\t\t\t\tconst srcpath = src + sep + filename;\n\t\t\t\t\tconst destpath = dest + sep + filename;\n\n\t\t\t\t\tif ( fs.statSync( srcpath ).isDirectory() ) {\n\t\t\t\t\t\treturn copydir( srcpath, destpath );\n\t\t\t\t\t}\n\n\t\t\t\t\tconst data = fs.readFileSync( srcpath, readOptions );\n\t\t\t\t\tfs.writeFileSync( destpath, data, writeOptions );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcopydir( src, dest );\n\t\t}\n\t};\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const writeFile = asyncMethod( 'writeFile' );\nexport const appendFile = asyncMethod( 'appendFile' );\n\nexport const writeFileSync = syncMethod( 'writeFileSync' );\nexport const appendFileSync = syncMethod( 'appendFileSync' );\n\nfunction normaliseArguments ( args ) {\n\targs = Array.prototype.slice.call( args, 0 );\n\tlet opts = {};\n\n\tif ( typeof args[ args.length - 1 ] === 'object' && !( args[ args.length - 1 ] instanceof Buffer ) ) {\n\t\topts = args.pop();\n\t}\n\n\treturn { opts, data: args.pop(), dest: resolvePath( args ) };\n}\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data, opts } = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfs[ methodName ]( dest, data, opts, err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfulfil( data );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst { dest, data } = normaliseArguments( arguments );\n\n\t\tmkdirp.sync( dirname( dest ) );\n\t\treturn fs[ methodName ]( dest, data );\n\t};\n}\n","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function symlink () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\n\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\treject( err );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.symlink( src, dest, options.type, err => {\n\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function symlinkSync () {\n\tconst src = resolvePath( arguments );\n\n\treturn {\n\t\tto () {\n\t\t\tconst { options, resolvedPath: dest } = resolvePathAndOptions( arguments );\n\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\treturn fs.symlinkSync( src, dest, options.type );\n\t\t}\n\t};\n}","import { dirname } from 'path';\nimport * as fs from 'graceful-fs';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tlet options;\n\tlet flags;\n\tlet i;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\t\tflags = args[ args.length - 2 ];\n\t\ti = args.length - 2;\n\t} else {\n\t\toptions = {};\n\t\tflags = args[ args.length - 1 ];\n\t\ti = args.length - 1;\n\t}\n\n\tlet pathargs = new Array( i );\n\twhile ( i-- ) {\n\t\tpathargs[i] = args[i];\n\t}\n\n\tconst resolvedPath = resolvePath( pathargs );\n\n\treturn { resolvedPath, options, flags };\n}\n\nfunction bailIfExists ( src, flags, mode ) {\n\tlet alreadyExists;\n\n\ttry {\n\t\tfs.statSync( src );\n\t\talreadyExists = true;\n\t} catch ( err ) {\n\t\tif ( err.code !== 'ENOENT' ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif ( alreadyExists ) {\n\t\t// attempt the operation = that way, we get the intended error message\n\t\t// TODO can't we just do this in the first place?\n\t\tfs.openSync( src, flags, mode );\n\t}\n}\n\nexport function open () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tfunction open () {\n\t\t\tfs.open( src, flags, options.mode, ( err, fd ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( fd );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// create dirs if necessary\n\t\tif ( /^[wa]/.test( flags ) ) {\n\t\t\tmkdirp( dirname( src ), err => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\topen();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\topen();\n\t\t}\n\t});\n}\n\n\nexport function openSync () {\n\tconst { resolvedPath: src, options, flags } = normaliseArguments( arguments );\n\n\tif ( /^.x/.test( flags ) ) {\n\t\tbailIfExists( src, flags, options.mode );\n\t}\n\n\t// create dirs if necessary\n\tif ( /^[wa]/.test( flags ) ) {\n\t\tmkdirp.sync( dirname( src ) );\n\t}\n\n\treturn fs.openSync( src, flags, options.mode );\n}","import mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport function mkdir () {\n\tconst dir = resolvePath( arguments );\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tmkdirp( dir, err => {\n\t\t\tif ( err ) {\n\t\t\t\treject( err );\n\t\t\t} else {\n\t\t\t\tfulfil();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport function mkdirSync () {\n\tconst dir = resolvePath( arguments );\n\tmkdirp.sync( dir );\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePath from '../utils/resolvePath';\n\nexport const rename = asyncMethod( 'rename' );\nexport const link = asyncMethod( 'link' );\n\nexport const renameSync = syncMethod( 'renameSync' );\nexport const linkSync = syncMethod( 'linkSync' );\n\nfunction asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\t\t\tmkdirp( dirname( dest ), err => {\n\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs[ methodName ]( src, dest, err => {\n\t\t\t\t\t\t\t\tif ( err ) {\n\t\t\t\t\t\t\t\t\treject( err );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfulfil();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n}\n\nfunction syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst src = resolvePath( arguments );\n\n\t\treturn {\n\t\t\tto () {\n\t\t\t\tconst dest = resolvePath( arguments );\n\n\t\t\t\tmkdirp.sync( dirname( dest ) );\n\t\t\t\treturn fs[ methodName ]( src, dest );\n\t\t\t}\n\t\t};\n\t};\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nexport function exists () {\n\tconst target = resolvePath( arguments );\n\n\treturn new Promise( fulfil => {\n\t\tfs.exists( target, exists => fulfil( exists ) );\n\t});\n}\n\nexport function existsSync () {\n\treturn fs.existsSync( resolvePath( arguments ) );\n}","import * as fs from 'graceful-fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\nimport resolvePathAndOptions from '../utils/resolvePathAndOptions';\n\nexport function createReadStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\treturn fs.createReadStream( resolvedPath, options );\n}\n\nexport function createWriteStream () {\n\tconst { resolvedPath, options } = resolvePathAndOptions( arguments );\n\n\tmkdirp.sync( dirname( resolvedPath ) );\n\treturn fs.createWriteStream( resolvedPath, options );\n}","import { resolve } from 'path';\n\nexport default function resolvePathAndOptions ( args ) {\n\tlet options;\n\tlet pathargs;\n\n\tif ( typeof args[ args.length - 1 ] === 'object' ) {\n\t\toptions = args[ args.length - 1 ];\n\n\t\tlet i = args.length - 1;\n\t\tpathargs = new Array( i );\n\n\t\twhile ( i-- ) {\n\t\t\tpathargs[i] = args[i];\n\t\t}\n\t} else {\n\t\toptions = {};\n\t\tpathargs = args;\n\t}\n\n\tconst resolvedPath = resolve.apply( null, pathargs );\n\n\treturn { options, resolvedPath };\n}","import * as fs from 'graceful-fs';\n\nexport function asyncFileDescriptorMethod ( methodName ) {\n\treturn function () {\n\t\tlet args = [];\n\t\tlet i = arguments.length;\n\n\t\twhile ( i-- ) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}","import * as fs from 'graceful-fs';\nimport resolvePath from '../utils/resolvePath';\n\nfunction normaliseArguments ( args ) {\n\tconst len = args.length;\n\n\tlet buildingPath = true;\n\tlet pathargs = [];\n\tlet normalised = [ null ]; // null is a placeholder for the resolved path\n\tlet i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tif ( buildingPath && typeof args[i] === 'string' ) {\n\t\t\tpathargs[i] = args[i];\n\t\t} else {\n\t\t\tbuildingPath = false;\n\t\t\tnormalised.push( args[i] );\n\t\t}\n\t}\n\n\tnormalised[0] = resolvePath( pathargs );\n\n\treturn normalised;\n}\n\nexport function asyncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\n\t\treturn new Promise( ( fulfil, reject ) => {\n\t\t\targs.push( ( err, result ) => {\n\t\t\t\tif ( err ) {\n\t\t\t\t\treject( err );\n\t\t\t\t} else {\n\t\t\t\t\tfulfil( result );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs[ methodName ].apply( fs, args );\n\t\t});\n\t};\n}\n\nexport function syncMethod ( methodName ) {\n\treturn function () {\n\t\tconst args = normaliseArguments( arguments );\n\t\treturn fs[ methodName ].apply( fs, args );\n\t};\n}","import { resolve } from 'path';\n\nexport default function resolvePath ( args ) {\n\treturn resolve.apply( null, args );\n}"],"names":[],"mappings":"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"}