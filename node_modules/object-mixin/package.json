{
  "_args": [
    [
      "object-mixin@latest",
      "/home/tob2/workspace/asyncmachine-visualizer/node_modules/asyncmachine"
    ]
  ],
  "_from": "object-mixin@latest",
  "_id": "object-mixin@0.2.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/object-mixin",
  "_npmUser": {
    "email": "andrea.giammarchi@gmail.com",
    "name": "webreflection"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "name": "object-mixin",
    "raw": "object-mixin@latest",
    "rawSpec": "latest",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/asyncmachine"
  ],
  "_resolved": "https://registry.npmjs.org/object-mixin/-/object-mixin-0.2.1.tgz",
  "_shasum": "6d2f0e8e9bb7242e4442098d8f2f91704721c6b3",
  "_shrinkwrap": null,
  "_spec": "object-mixin@latest",
  "_where": "/home/tob2/workspace/asyncmachine-visualizer/node_modules/asyncmachine",
  "author": {
    "name": "Andrea Giammarchi",
    "url": "http://webreflection.blogspot.com/"
  },
  "bugs": {
    "url": "https://github.com/WebReflection/object-mixin/issues"
  },
  "dependencies": {
    "wru": ">= 0.0.0"
  },
  "description": "ES6 next big thing polyfilled before it gets real",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "6d2f0e8e9bb7242e4442098d8f2f91704721c6b3",
    "tarball": "http://registry.npmjs.org/object-mixin/-/object-mixin-0.2.1.tgz"
  },
  "homepage": "https://github.com/WebReflection/object-mixin",
  "keywords": [
    "ES6",
    "JavaScript",
    "Object",
    "defineProperties",
    "defineProperty",
    "extend",
    "getOwnPropertyDescriptor",
    "getOwnPropertyNames",
    "getPrototypeOf",
    "mixin",
    "standard"
  ],
  "main": "./build/object-mixin.node.js",
  "maintainers": [
    {
      "name": "webreflection",
      "email": "andrea.giammarchi@gmail.com"
    }
  ],
  "name": "object-mixin",
  "optionalDependencies": {},
  "readme": "object-mixin\n============\n\nA possible ES6 polyfill\n\n[![build status](https://secure.travis-ci.org/WebReflection/object-mixin.png)](http://travis-ci.org/WebReflection/object-mixin)\n\n\n### API\n\n```javascript\n\n// basic signature\nObject.mixin(\n  target:Object,  // the object to be enriched\n\n  source:Object   // all own properties of this object\n                  // will be assigned using same descriptor\n\n):target          // returns the target object modified\n\n\n// overload with Traits (Function)\n\nObject.mixin(\n  target:Object,  // the object to be enriched\n\n  source:Trait    // invoked with target as context\n\n  [, args:Array|Arguments]\n                  // optional args property\n                  // used at Trait arguments\n\n):target          // returns the target object modified\n\n```\n\n\n### Compatibility\nShould be compatible with all JavaScript ES3 or JScript engines.\n\n[node.js](build/object-mixin.node.js) module, [AMD](build/object-mixin.amd.js) module, and generic env [standalone](build/object-mixin.js) file.\n\n\n### Example\n\n```javascript\n// using an object\n\nvar a = {a: 'b'},\n    b = Object.mixin({b: 'b'}, a);\n\nconsole.log(JSON.stringify(b));\n// {\"a\":\"a\",\"b\":\"b\"}\n\n\n// using a function\nfunction addUniqueIdFunctionality(prefix) {\n  var\n    privatelyShared = {},\n    i = 0\n  ;\n  if (!prefix) prefix = '.' + (new Date).getTime();\n  this.getIdFor = function (key) {\n    return privatelyShared[key] || (\n      privatelyShared[key] = ++i + prefix + Math.random()\n    );\n  };\n}\n\nfunction GenericClass(){}\n\nObject.mixin(\n  GenericClass.prototype,\n  addUniqueIdFunctionality\n  // , ['my_prefix']\n);\n\nvar instance1 = new GenericClass,\n    instance2 = new GenericClass;\n\nconsole.log([\n  instance1.getIdFor('a'),\n  instance1.getIdFor('b'), // different\n  instance2.getIdFor('a')\n  // same as instance1.getIdFor('a')\n].join('\\n'));\n```\n\n\n### License\n\n```\n           DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                   Version 2, December 2004\n\nCopyright (C) 2013 Andrea Giammarchi <spam@hater.me>\n\nEveryone is permitted to copy and distribute verbatim or modified\ncopies of this license document, and changing it is allowed as long\nas the name is changed.\n\n           DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n 0. You just DO WHAT THE FUCK YOU WANT TO.\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/WebReflection/object-mixin.git"
  },
  "scripts": {
    "test": "node test/.test.js"
  },
  "version": "0.2.1"
}
