{"version":3,"file":"sorcery.es6.js","sources":["../src/index.js","../src/Chain.js","../src/utils/slash.js","../src/SourceMap.js","../src/utils/btoa.js","../src/Node.js","../src/utils/getMap.js","../src/utils/getSourceMappingUrl.js","../src/utils/getMapFromUrl.js","../src/utils/sourceMappingURL.js","../src/utils/atob.js","../src/utils/decodeMappings.js","../node_modules/sourcemap-codec/src/sourcemap-codec.js","../node_modules/sourcemap-codec/node_modules/vlq/src/vlq.js"],"sourcesContent":["import { resolve } from 'path';\nimport Node from './Node';\nimport Chain from './Chain';\n\nexport function load ( file, options ) {\n\tconst { node, sourcesContentByPath, sourceMapByPath } = init( file, options );\n\n\treturn node.load( sourcesContentByPath, sourceMapByPath )\n\t\t.then( () => node.isOriginalSource ? null : new Chain( node, sourcesContentByPath ) );\n}\n\nexport function loadSync ( file, options = {} ) {\n\tconst { node, sourcesContentByPath, sourceMapByPath } = init( file, options );\n\n\tnode.loadSync( sourcesContentByPath, sourceMapByPath );\n\treturn node.isOriginalSource ? null : new Chain( node, sourcesContentByPath );\n}\n\nfunction init ( file, options = {} ) {\n\tconst node = new Node({ file });\n\n\tlet sourcesContentByPath = {};\n\tlet sourceMapByPath = {};\n\n\tif ( options.content ) {\n\t\tObject.keys( options.content ).forEach( key => {\n\t\t\tsourcesContentByPath[ resolve( key ) ] = options.content[ key ];\n\t\t});\n\t}\n\n\tif ( options.sourcemaps ) {\n\t\tObject.keys( options.sourcemaps ).forEach( key => {\n\t\t\tsourceMapByPath[ resolve( key ) ] = options.sourcemaps[ key ];\n\t\t});\n\t}\n\n\treturn { node, sourcesContentByPath, sourceMapByPath };\n}\n","import { basename, dirname, extname, relative, resolve } from 'path';\nimport { writeFile, writeFileSync } from 'sander';\nimport { encode } from 'sourcemap-codec';\nimport SourceMap from './SourceMap';\nimport slash from './utils/slash';\n\nlet SOURCEMAPPING_URL = 'sourceMa';\nSOURCEMAPPING_URL += 'ppingURL';\n\nconst SOURCEMAP_COMMENT = new RegExp( `\\n*(?:` +\n\t`\\\\/\\\\/[@#]\\\\s*${SOURCEMAPPING_URL}=([^'\"]+)|` +      // js\n\t`\\\\/\\\\*#?\\\\s*${SOURCEMAPPING_URL}=([^'\"]+)\\\\s\\\\*\\\\/)` + // css\n`\\\\s*$`, 'g' );\n\nexport default class Chain {\n\tconstructor ( node, sourcesContentByPath ) {\n\t\tthis.node = node;\n\t\tthis.sourcesContentByPath = sourcesContentByPath;\n\n\t\tthis._stats = {};\n\t}\n\n\tstat () {\n\t\treturn {\n\t\t\tselfDecodingTime: this._stats.decodingTime / 1e6,\n\t\t\ttotalDecodingTime: ( this._stats.decodingTime + tally( this.node.sources, 'decodingTime' ) ) / 1e6,\n\n\t\t\tencodingTime: this._stats.encodingTime / 1e6,\n\t\t\ttracingTime: this._stats.tracingTime / 1e6,\n\n\t\t\tuntraceable: this._stats.untraceable\n\t\t};\n\t}\n\n\tapply ( options = {} ) {\n\t\tlet allNames = [];\n\t\tlet allSources = [];\n\n\t\tconst applySegment = ( segment, result ) => {\n\t\t\tif ( segment.length < 4 ) return;\n\n\t\t\tconst traced = this.node.sources[ segment[1] ].trace( // source\n\t\t\t\tsegment[2], // source code line\n\t\t\t\tsegment[3], // source code column\n\t\t\t\tthis.node.map.names[ segment[4] ]\n\t\t\t);\n\n\t\t\tif ( !traced ) {\n\t\t\t\tthis._stats.untraceable += 1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet sourceIndex = allSources.indexOf( traced.source );\n\t\t\tif ( !~sourceIndex ) {\n\t\t\t\tsourceIndex = allSources.length;\n\t\t\t\tallSources.push( traced.source );\n\t\t\t}\n\n\t\t\tlet newSegment = [\n\t\t\t\tsegment[0], // generated code column\n\t\t\t\tsourceIndex,\n\t\t\t\ttraced.line - 1,\n\t\t\t\ttraced.column\n\t\t\t];\n\n\t\t\tif ( traced.name ) {\n\t\t\t\tlet nameIndex = allNames.indexOf( traced.name );\n\t\t\t\tif ( !~nameIndex ) {\n\t\t\t\t\tnameIndex = allNames.length;\n\t\t\t\t\tallNames.push( traced.name );\n\t\t\t\t}\n\n\t\t\t\tnewSegment[4] = nameIndex;\n\t\t\t}\n\n\t\t\tresult[ result.length ] = newSegment;\n\t\t};\n\n\t\t// Trace mappings\n\t\tlet tracingStart = process.hrtime();\n\n\t\tlet i = this.node.mappings.length;\n\t\tlet resolved = new Array( i );\n\n\t\tlet j, line, result;\n\n\t\twhile ( i-- ) {\n\t\t\tline = this.node.mappings[i];\n\t\t\tresolved[i] = result = [];\n\n\t\t\tfor ( j = 0; j < line.length; j += 1 ) {\n\t\t\t\tapplySegment( line[j], result );\n\t\t\t}\n\t\t}\n\n\t\tlet tracingTime = process.hrtime( tracingStart );\n\t\tthis._stats.tracingTime = 1e9 * tracingTime[0] + tracingTime[1];\n\n\t\t// Encode mappings\n\t\tlet encodingStart = process.hrtime();\n\t\tlet mappings = encode( resolved );\n\t\tlet encodingTime = process.hrtime( encodingStart );\n\t\tthis._stats.encodingTime = 1e9 * encodingTime[0] + encodingTime[1];\n\n\t\tlet includeContent = options.includeContent !== false;\n\n\t\treturn new SourceMap({\n\t\t\tfile: basename( this.node.file ),\n\t\t\tsources: allSources.map( source => slash( relative( options.base || dirname( this.node.file ), source ) ) ),\n\t\t\tsourcesContent: allSources.map( source => includeContent ? this.sourcesContentByPath[ source ] : null ),\n\t\t\tnames: allNames,\n\t\t\tmappings\n\t\t});\n\t}\n\n\ttrace ( oneBasedLineIndex, zeroBasedColumnIndex ) {\n\t\treturn this.node.trace( oneBasedLineIndex - 1, zeroBasedColumnIndex, null );\n\t}\n\n\twrite ( dest, options ) {\n\t\tif ( typeof dest !== 'string' ) {\n\t\t\toptions = dest;\n\t\t\tdest = this.node.file;\n\t\t}\n\n\t\toptions = options || {};\n\n\t\tconst { resolved, content, map } = processWriteOptions( dest, this, options );\n\n\t\tlet promises = [ writeFile( resolved, content ) ];\n\n\t\tif ( !options.inline ) {\n\t\t\tpromises.push( writeFile( resolved + '.map', map.toString() ) );\n\t\t}\n\n\t\treturn Promise.all( promises );\n\t}\n\n\twriteSync ( dest, options ) {\n\t\tif ( typeof dest !== 'string' ) {\n\t\t\toptions = dest;\n\t\t\tdest = this.node.file;\n\t\t}\n\n\t\toptions = options || {};\n\n\t\tconst { resolved, content, map } = processWriteOptions( dest, this, options );\n\n\t\twriteFileSync( resolved, content );\n\n\t\tif ( !options.inline ) {\n\t\t\twriteFileSync( resolved + '.map', map.toString() );\n\t\t}\n\t}\n}\n\nfunction processWriteOptions ( dest, chain, options ) {\n\tconst resolved = resolve( dest );\n\n\tconst map = chain.apply({\n\t\tincludeContent: options.includeContent,\n\t\tbase: options.base ? resolve( options.base ) : dirname( resolved )\n\t});\n\n\tconst url = options.inline ? map.toUrl() : ( options.absolutePath ? resolved : basename( resolved ) ) + '.map';\n\n\t// TODO shouldn't url be relative?\n\tconst content = chain.node.content.replace( SOURCEMAP_COMMENT, '' ) + sourcemapComment( url, resolved );\n\n\treturn { resolved, content, map };\n}\n\nfunction tally ( nodes, stat ) {\n\treturn nodes.reduce( ( total, node ) => {\n\t\treturn total + node._stats[ stat ];\n\t}, 0 );\n}\n\nfunction sourcemapComment ( url, dest ) {\n\tconst ext = extname( dest );\n\turl = encodeURI( url );\n\n\tif ( ext === '.css' ) {\n\t\treturn `\\n/*# ${SOURCEMAPPING_URL}=${url} */\\n`;\n\t}\n\n\treturn `\\n//# ${SOURCEMAPPING_URL}=${url}\\n`;\n}\n","export default function slash ( path ) {\n\treturn typeof path === 'string' ?\n\t\tpath.replace( /\\\\/g, '/' ) :\n\t\tpath;\n}\n","import btoa from './utils/btoa';\n\nexport default class SourceMap {\n\tconstructor ( properties ) {\n\t\tthis.version = 3;\n\n\t\tthis.file           = properties.file;\n\t\tthis.sources        = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names          = properties.names;\n\t\tthis.mappings       = properties.mappings;\n\t}\n\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t}\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n}","/**\n * Encodes a string as base64\n * @param {string} str - the string to encode\n * @returns {string}\n */\nexport default function btoa ( str ) {\n\treturn new Buffer( str ).toString( 'base64' );\n}","import { dirname, resolve } from 'path';\nimport { readFile, readFileSync, Promise } from 'sander';\nimport decodeMappings from './utils/decodeMappings';\nimport getMap from './utils/getMap';\n\nexport default class Node {\n\tconstructor ({ file, content }) {\n\t\tthis.file = file ? resolve( file ) : null;\n\t\tthis.content = content || null; // sometimes exists in sourcesContent, sometimes doesn't\n\n\t\tif ( !this.file && this.content === null ) {\n\t\t\tthrow new Error( 'A source must specify either file or content' );\n\t\t}\n\n\t\t// these get filled in later\n\t\tthis.map = null;\n\t\tthis.mappings = null;\n\t\tthis.sources = null;\n\t\tthis.isOriginalSource = null;\n\n\t\tthis._stats = {\n\t\t\tdecodingTime: 0,\n\t\t\tencodingTime: 0,\n\t\t\ttracingTime: 0,\n\n\t\t\tuntraceable: 0\n\t\t};\n\t}\n\n\tload ( sourcesContentByPath, sourceMapByPath ) {\n\t\treturn getContent( this, sourcesContentByPath ).then( content => {\n\t\t\tthis.content = sourcesContentByPath[ this.file ] = content;\n\n\t\t\treturn getMap( this, sourceMapByPath ).then( map => {\n\t\t\t\tif ( !map ) return null;\n\n\t\t\t\tthis.map = map;\n\n\t\t\t\tlet decodingStart = process.hrtime();\n\t\t\t\tthis.mappings = decodeMappings( map.mappings );\n\t\t\t\tlet decodingTime = process.hrtime( decodingStart );\n\t\t\t\tthis._stats.decodingTime = 1e9 * decodingTime[0] + decodingTime[1];\n\n\t\t\t\tconst sourcesContent = map.sourcesContent || [];\n\n\t\t\t\tconst sourceRoot = resolve( dirname( this.file ), map.sourceRoot || '' );\n\n\t\t\t\tthis.sources = map.sources.map( ( source, i ) => {\n\t\t\t\t\treturn new Node({\n\t\t\t\t\t\tfile: source ? resolve( sourceRoot, source ) : null,\n\t\t\t\t\t\tcontent: sourcesContent[i]\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tconst promises = this.sources.map( node => node.load( sourcesContentByPath, sourceMapByPath ) );\n\t\t\t\treturn Promise.all( promises );\n\t\t\t});\n\t\t});\n\t}\n\n\tloadSync ( sourcesContentByPath, sourceMapByPath ) {\n\t\tif ( !this.content ) {\n\t\t\tif ( !sourcesContentByPath[ this.file ] ) {\n\t\t\t\tsourcesContentByPath[ this.file ] = readFileSync( this.file ).toString();\n\t\t\t}\n\n\t\t\tthis.content = sourcesContentByPath[ this.file ];\n\t\t}\n\n\t\tconst map = getMap( this, sourceMapByPath, true );\n\t\tlet sourcesContent;\n\n\t\tif ( !map ) {\n\t\t\tthis.isOriginalSource = true;\n\t\t} else {\n\t\t\tthis.map = map;\n\t\t\tthis.mappings = decodeMappings( map.mappings );\n\n\t\t\tsourcesContent = map.sourcesContent || [];\n\n\t\t\tconst sourceRoot = resolve( dirname( this.file ), map.sourceRoot || '' );\n\n\t\t\tthis.sources = map.sources.map( ( source, i ) => {\n\t\t\t\tconst node = new Node({\n\t\t\t\t\tfile: resolve( sourceRoot, source ),\n\t\t\t\t\tcontent: sourcesContent[i]\n\t\t\t\t});\n\n\t\t\t\tnode.loadSync( sourcesContentByPath, sourceMapByPath );\n\t\t\t\treturn node;\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Traces a segment back to its origin\n\t * @param {number} lineIndex - the zero-based line index of the\n\t   segment as found in `this`\n\t * @param {number} columnIndex - the zero-based column index of the\n\t   segment as found in `this`\n\t * @param {string || null} - if specified, the name that should be\n\t   (eventually) returned, as it is closest to the generated code\n\t * @returns {object}\n\t     @property {string} source - the filepath of the source\n\t     @property {number} line - the one-based line index\n\t     @property {number} column - the zero-based column index\n\t     @property {string || null} name - the name corresponding\n\t     to the segment being traced\n\t */\n\ttrace ( lineIndex, columnIndex, name ) {\n\t\t// If this node doesn't have a source map, we have\n\t\t// to assume it is the original source\n\t\tif ( this.isOriginalSource ) {\n\t\t\treturn {\n\t\t\t\tsource: this.file,\n\t\t\t\tline: lineIndex + 1,\n\t\t\t\tcolumn: columnIndex || 0,\n\t\t\t\tname: name\n\t\t\t};\n\t\t}\n\n\t\t// Otherwise, we need to figure out what this position in\n\t\t// the intermediate file corresponds to in *its* source\n\t\tconst segments = this.mappings[ lineIndex ];\n\n\t\tif ( !segments || segments.length === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( columnIndex != null ) {\n\t\t\tlet len = segments.length;\n\t\t\tlet i;\n\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\t\tlet generatedCodeColumn = segments[i][0];\n\n\t\t\t\tif ( generatedCodeColumn > columnIndex ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( generatedCodeColumn === columnIndex ) {\n\t\t\t\t\tif ( segments[i].length < 4 ) return null;\n\n\t\t\t\t\tlet sourceFileIndex = segments[i][1];\n\t\t\t\t\tlet sourceCodeLine = segments[i][2];\n\t\t\t\t\tlet sourceCodeColumn = segments[i][3];\n\t\t\t\t\tlet nameIndex = segments[i][4];\n\n\t\t\t\t\tlet parent = this.sources[ sourceFileIndex ];\n\t\t\t\t\treturn parent.trace( sourceCodeLine, sourceCodeColumn, this.map.names[ nameIndex ] || name );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// fall back to a line mapping\n\t\tlet sourceFileIndex = segments[0][1];\n\t\tlet sourceCodeLine = segments[0][2];\n\t\tlet nameIndex = segments[0][4];\n\n\t\tlet parent = this.sources[ sourceFileIndex ];\n\t\treturn parent.trace( sourceCodeLine, null, this.map.names[ nameIndex ] || name );\n\t}\n}\n\nfunction getContent ( node, sourcesContentByPath ) {\n\tif ( node.file in sourcesContentByPath ) {\n\t\tnode.content = sourcesContentByPath[ node.file ];\n\t}\n\n\tif ( !node.content ) {\n\t\treturn readFile( node.file ).then( String );\n\t}\n\n\treturn Promise.resolve( node.content );\n}\n","import getMapFromUrl from './getMapFromUrl';\nimport getSourceMappingUrl from './getSourceMappingUrl';\nimport { Promise } from 'sander';\n\nexport default function getMap ( node, sourceMapByPath, sync ) {\n\tif ( node.file in sourceMapByPath ) {\n\t\tconst map = sourceMapByPath[ node.file ];\n\t\treturn sync ? map : Promise.resolve( map );\n\t}\n\n\telse {\n\t\tconst url = getSourceMappingUrl( node.content );\n\n\t\tif ( !url ) {\n\t\t\tnode.isOriginalSource = true;\n\t\t\treturn sync ? null : Promise.resolve( null );\n\t\t}\n\n\t\treturn getMapFromUrl( url, node.file, sync );\n\t}\n}","import SOURCEMAPPING_URL from './sourceMappingURL';\n\nexport default function getSourceMappingUrl ( str ) {\n\tvar index, substring, url, match;\n\n\t// assume we want the last occurence\n\tindex = str.lastIndexOf( `${SOURCEMAPPING_URL}=` );\n\n\tif ( index === -1 ) {\n\t\treturn null;\n\t}\n\n\tsubstring = str.substring( index + 17 );\n\tmatch = /^[^\\r\\n]+/.exec( substring );\n\n\turl = match ? match[0] : null;\n\n\t// possibly a better way to do this, but we don't want to exclude whitespace\n\t// from the sourceMappingURL because it might not have been correctly encoded\n\tif ( url && url.slice( -2 ) === '*/' ) {\n\t\turl = url.slice( 0, -2 ).trim();\n\t}\n\n\treturn url;\n}\n","import { dirname, resolve } from 'path';\nimport { readFile, readFileSync, Promise } from 'sander';\nimport atob from './atob';\nimport SOURCEMAPPING_URL from './sourceMappingURL';\n\n/**\n * Turns a sourceMappingURL into a sourcemap\n * @param {string} url - the sourceMappingURL. Can be a\n   base64-encoded data URI\n * @param {string} base - the URL against which relative URLS\n   should be resolved\n * @param {boolean} sync - if `true`, return a promise, otherwise\n   return the sourcemap\n * @returns {object} - a version 3 sourcemap\n */\nexport default function getMapFromUrl ( url, base, sync ) {\n\tif ( /^data:/.test( url ) ) { // TODO beef this up\n\t\tconst match = /base64,(.+)$/.exec( url );\n\n\t\tif ( !match ) {\n\t\t\tthrow new Error( `${SOURCEMAPPING_URL} is not base64-encoded` );\n\t\t}\n\n\t\tconst json = atob( match[1] );\n\t\tconst map = JSON.parse( json );\n\t\treturn sync ? map : Promise.resolve( map );\n\t}\n\n\turl = resolve( dirname( base ), decodeURI( url ) );\n\n\tif ( sync ) {\n\t\treturn JSON.parse( readFileSync( url ).toString() );\n\t} else {\n\t\treturn readFile( url ).then( String ).then( JSON.parse );\n\t}\n}\n","// this looks ridiculous, but it prevents sourcemap tooling from mistaking\n// this for an actual sourceMappingURL\nlet SOURCEMAPPING_URL = 'sourceMa';\nSOURCEMAPPING_URL += 'ppingURL';\n\nexport default SOURCEMAPPING_URL;\n","/**\n * Decodes a base64 string\n * @param {string} base64 - the string to decode\n * @returns {string}\n */\nexport default function atob ( base64 ) {\n\treturn new Buffer( base64, 'base64' ).toString( 'utf8' );\n}","import crc32 from 'buffer-crc32';\nimport { decode } from 'sourcemap-codec';\n\nlet cache = {};\n\nexport default function decodeMappings ( mappings ) {\n\tlet checksum = crc32( mappings );\n\n\tif ( !cache[ checksum ] ) {\n\t\tcache[ checksum ] = decode( mappings );\n\t}\n\n\treturn cache[ checksum ];\n}\n","import { decode as decodeVlq, encode as encodeVlq } from 'vlq';\n\nfunction decodeSegments ( encodedSegments ) {\n\tlet i = encodedSegments.length;\n\tlet segments = new Array( i );\n\n\twhile ( i-- ) segments[i] = decodeVlq( encodedSegments[i] );\n\treturn segments;\n}\n\nexport function decode ( mappings ) {\n\tlet sourceFileIndex = 0;   // second field\n\tlet sourceCodeLine = 0;    // third field\n\tlet sourceCodeColumn = 0;  // fourth field\n\tlet nameIndex = 0;         // fifth field\n\n\tlet lines = mappings.split( ';' );\n\tlet numLines = lines.length;\n\tlet decoded = new Array( numLines );\n\n\tlet i;\n\tlet j;\n\tlet line;\n\tlet generatedCodeColumn;\n\tlet decodedLine;\n\tlet segments;\n\tlet segment;\n\tlet result;\n\n\tfor ( i = 0; i < numLines; i += 1 ) {\n\t\tline = lines[i];\n\n\t\tgeneratedCodeColumn = 0; // first field - reset each time\n\t\tdecodedLine = [];\n\n\t\tsegments = decodeSegments( line.split( ',' ) );\n\n\t\tfor ( j = 0; j < segments.length; j += 1 ) {\n\t\t\tsegment = segments[j];\n\n\t\t\tif ( !segment.length ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tgeneratedCodeColumn += segment[0];\n\n\t\t\tresult = [ generatedCodeColumn ];\n\t\t\tdecodedLine.push( result );\n\n\t\t\tif ( segment.length === 1 ) {\n\t\t\t\t// only one field!\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsourceFileIndex  += segment[1];\n\t\t\tsourceCodeLine   += segment[2];\n\t\t\tsourceCodeColumn += segment[3];\n\n\t\t\tresult.push( sourceFileIndex, sourceCodeLine, sourceCodeColumn );\n\n\t\t\tif ( segment.length === 5 ) {\n\t\t\t\tnameIndex += segment[4];\n\t\t\t\tresult.push( nameIndex );\n\t\t\t}\n\t\t}\n\n\t\tdecoded[i] = decodedLine;\n\t}\n\n\treturn decoded;\n}\n\nexport function encode ( decoded ) {\n\tlet offsets = {\n\t\tgeneratedCodeColumn: 0,\n\t\tsourceFileIndex: 0,   // second field\n\t\tsourceCodeLine: 0,    // third field\n\t\tsourceCodeColumn: 0,  // fourth field\n\t\tnameIndex: 0          // fifth field\n\t};\n\n\treturn decoded.map( line => {\n\t\toffsets.generatedCodeColumn = 0; // first field - reset each time\n\t\treturn line.map( encodeSegment ).join( ',' );\n\t}).join( ';' );\n\n\tfunction encodeSegment ( segment ) {\n\t\tif ( !segment.length ) {\n\t\t\treturn segment;\n\t\t}\n\n\t\tlet result = new Array( segment.length );\n\n\t\tresult[0] = segment[0] - offsets.generatedCodeColumn;\n\t\toffsets.generatedCodeColumn = segment[0];\n\n\t\tif ( segment.length === 1 ) {\n\t\t\t// only one field!\n\t\t\treturn encodeVlq( result );\n\t\t}\n\n\t\tresult[1] = segment[1] - offsets.sourceFileIndex;\n\t\tresult[2] = segment[2] - offsets.sourceCodeLine;\n\t\tresult[3] = segment[3] - offsets.sourceCodeColumn;\n\n\t\toffsets.sourceFileIndex  = segment[1];\n\t\toffsets.sourceCodeLine   = segment[2];\n\t\toffsets.sourceCodeColumn = segment[3];\n\n\t\tif ( segment.length === 5 ) {\n\t\t\tresult[4] = segment[4] - offsets.nameIndex;\n\t\t\toffsets.nameIndex = segment[4];\n\t\t}\n\n\t\treturn encodeVlq( result );\n\t}\n}\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n"],"names":[],"mappings":"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"}